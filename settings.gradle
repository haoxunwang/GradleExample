include ':app'
include ':librarya'

// Test gradle instance
println "In Settings, gradle id is " + gradle.hashCode()
println "Home Dir: " + gradle.gradleHomeDir
println "User Home Dir: " + gradle.gradle.gradleUserHomeDir
println "Parent: " + gradle.parent

/**
 * Test setting extra property for Gradle instance
 * 1 解析一个名为local.properties的文件，读取AndroidSDK和NDK的路径
 * 2 获取最终产出物目录的路径。这样，编译完的apk或者jar包将拷贝到这个最终产出物目录中
 * 3 获取Android SDK指定编译的版本
 */

def initGradleEnvironment() {
    def/*Properties*/ properties = new Properties()
    def/*File*/ propertyFile = new File(rootDir.getAbsolutePath() + "/local.properties")
    properties.load(propertyFile.newDataInputStream())

    /*  根据Project、Gradle生命周期的介绍，settings对象的创建位于具体Project创建之前
      而Gradle底对象已经创建好了。所以，我们把local.properties的信息读出来后，通过
     extra属性的方式设置到gradle对象中
      而具体Project在执行的时候，就可以直接从gradle对象中得到这些属性了！*/
    gradle.ext.api = properties.getProperty('sdk.api')
    gradle.ext.sdkDir = properties.getProperty('sdk.dir')
    gradle.ext.ndkDir = properties.getProperty('ndk.dir')
    gradle.ext.localDir = properties.getProperty('local.dir')
    //指定debugkeystore文件的位置，debug版apk签名的时候会用到
    gradle.ext.debugKeystore = properties.getProperty('debug.keystore')

    println "initialize Gradle Environment completes..."
}

initGradleEnvironment()